{
  "Question Understanding": [
    "question",
    "question classify",
    "question classify broad",
    "question context",
    "question based",
    "questions be",
    "question question",
    "question question expected",
    "question expected",
    "question choices",
    "question choices yes",
    "question answer",
    "answer pair",
    "question topic",
    "topic question",
    "question topic entity",
    "entity question",
    "entity question talks",
    "question talks",
    "question matching",
    "Questions be",
    "answer logical",
    "questions arithmetic",
    "answer arithmetic",
    "questions textual",
    "question be",
    "question possible",
    "questions contain",
    "questions questions convert",
    "question belong",
    "question kind",
    "question date",
    "given question provided",
    "question provided",
    "question provided reasoning",
    "question task",
    "question few",
    "question essential",
    "think question language",
    "question language",
    "question using",
    "present question Make",
    "question Make",
    "question words",
    "order question Grammatical",
    "question Grammatical",
    "question detect",
    "question description",
    "question description category",
    "questions entities",
    "question Questions",
    "question Questions temporal",
    "Questions temporal",
    "question temporal"
  ],
  "Question Generation": [
    "questions basic",
    "answer question be",
    "question based",
    "question containing",
    "question contain",
    "question question contain",
    "question list attributes",
    "question Attribute",
    "answer based",
    "question title",
    "construct question information",
    "answer unique",
    "question answer be",
    "answer question have",
    "question have",
    "answering question fact",
    "question fact",
    "answering question Aristotle",
    "question Aristotle",
    "questions compare",
    "question story",
    "question story understanding",
    "question story relationship",
    "question give",
    "original question Often",
    "question Often",
    "question answers",
    "question topic",
    "question topic paragraph",
    "question prefix",
    "question use",
    "generated questions contain",
    "questions associated",
    "question repeating",
    "write question choices",
    "question choices",
    "question choices conversation",
    "answer question W",
    "questions answer be",
    "generated question include",
    "question include",
    "knowledge generate question",
    "question involve",
    "write question event",
    "question event",
    "question event duration",
    "question start",
    "create questions explicit",
    "question based specific",
    "question temporal",
    "article answer task",
    "answer task",
    "question answer based",
    "question task",
    "question job",
    "question changing",
    "question changing few",
    "question little",
    "create question combination",
    "question combination",
    "question combination Do",
    "question specialized",
    "create question form",
    "question form",
    "question/query natural",
    "question understand",
    "question event frequency",
    "question characters",
    "question parts",
    "question basis",
    "question easy randomly",
    "question evaluate",
    "context answer task",
    "Create question answer",
    "focus question",
    "question ordering",
    "question yield",
    "generate question concept",
    "question concept",
    "question concept given",
    "create questions information",
    "entity questions answer"
  ],
  "Stereotype Detection": [
    "conveys stereotype",
    "stereotype",
    "stereotype anti-stereotype",
    "stereotype anti-stereotype unrelated",
    "anti-stereotype unrelated",
    "target stereotype held",
    "stereotype held",
    "anti-stereotype idea",
    "stereotype stereotype over-generalized",
    "stereotype over-generalized belief",
    "stereotype anti-stereotype stereotype",
    "anti-stereotype stereotype",
    "common stereotype",
    "common stereotype expected",
    "stereotype expected",
    "stereotype expected classify",
    "classes stereotype",
    "convey stereotype",
    "unrelated stereotype",
    "stereotype passage",
    "stereotype anti-stereotype expected",
    "anti-stereotype expected",
    "anti-stereotype expected classify"
  ],
  "Program Execution": [],
  "Sentiment Analysis": [
    "sentiment based",
    "sentiment task generate",
    "sentiment generate",
    "sentiment value"
  ],
  "Sentence Compression": [],
  "Misc.": [],
  "Title Generation": [],
  "Answer Verification": [
    "provided answer valid",
    "answer valid",
    "Output answer",
    "options answer task",
    "answer task"
  ],
  "Pos Tagging": [
    "POS tag question"
  ],
  "Question Answering": [
    "answer question selecting",
    "answer question Do",
    "question answer",
    "question answer options",
    "question Write",
    "question based",
    "question marketing",
    "question answers",
    "question Based",
    "question Answer",
    "conversational question answers",
    "conversation question answer",
    "right answer question",
    "question healthcare Answer",
    "question classifying answer",
    "question question common",
    "question answer be",
    "Question answer",
    "Question answer options",
    "question choices",
    "question choices answer",
    "answer option question",
    "question choices given",
    "questions answer options",
    "answer question reason",
    "question event frequency",
    "question generate answer",
    "question Questions task",
    "question construct answer",
    "context question answer",
    "question answer choices",
    "entity answer question",
    "question process",
    "question options",
    "question options task",
    "question finding answer",
    "story question answering",
    "question answering",
    "question answering given",
    "question answer part",
    "question management"
  ],
  "Linguistic Probing": [
    "representation adjunct",
    "speech inversion"
  ],
  "Section Classification": [],
  "Named Entity Recognition": [],
  "Text Categorization": [
    "text classify categories"
  ],
  "Explanation": [
    "explanation",
    "explaining",
    "discussion",
    "following"
  ],
  "Commonsense Classification": [],
  "Sentence Perturbation": [],
  "Intent Identification": [],
  "Speaker Identification": [],
  "Sentence Composition": [
    "pair sentences",
    "pair sentences sentence",
    "sentence pair",
    "subject sentence",
    "sentence task",
    "sentence task write",
    "valid sentence word",
    "sentence word",
    "sentence example",
    "sentence refers",
    "write sentence genre",
    "sentence genre",
    "sentence genre tone",
    "sentence task generate",
    "create sentence based",
    "sentence based",
    "sentence category",
    "sentence output",
    "generate sentence relation",
    "sentence relation",
    "sentence relation specified",
    "input sentence category",
    "sentence category specified",
    "sentence word used",
    "sentence paragraph"
  ],
  "Toxic Language Detection": [],
  "Text to Code": [],
  "Ethics Classification": [],
  "Textual Entailment": [
    "sentences find entailment",
    "find entailment",
    "entailment",
    "entailment agreement",
    "Neutral Entailment",
    "sentences other entailment",
    "entailment disagree",
    "entailment disagree other",
    "sentences entailment",
    "second sentence entailed",
    "entailment neutral contradiction",
    "contradiction Entailment"
  ],
  "Sentence Ordering": [
    "swapped sentences order",
    "sentences order",
    "sentences order make",
    "number sentences order",
    "sentences correct",
    "sentences correct order"
  ],
  "Dialogue Act Recognition": [],
  "Word Relation Classification": [],
  "Text Matching": [
    "input list sentences",
    "list sentences output"
  ],
  "Wrong Candidate Generation": [
    "wrong answer Position",
    "wrong answer asked",
    "simple answer preferred",
    "spending money multiple",
    "wrong reasons",
    "wrong reasons justify",
    "wrong answer <"
  ],
  "Code to Text": [],
  "Story Composition": [],
  "Text Completion": [],
  "Dialogue Generation": [
    "dialogue response",
    "dialogue history",
    "history dialogue line",
    "participant dialogue accept",
    "dialogue accept",
    "dialogue exchange",
    "dialogue conversation"
  ],
  "Information Extraction": [
    "information abstract"
  ],
  "Style Transfer": [],
  "Text Simplification": [],
  "Text Quality Evaluation": [],
  "Question Rewriting": [],
  "Translation": [],
  "Cause Effect Classification": [
    "cause effect based"
  ],
  "Grammar Error Detection": [],
  "Grammar Error Correction": [],
  "Negotiation Strategy Detection": [
    "negotiation participants",
    "negotiation participants role",
    "negotiation strategy",
    "negotiation strategy used",
    "cooperative negotiation strategy",
    "negotiation such"
  ],
  "Coreference Resolution": [
    "coreference",
    "Coreferences",
    "coreference relations provided",
    "coreference relations multiple"
  ],
  "Sentence Expansion": [
    "sentence changing",
    "sentence changing general",
    "sentence using"
  ],
  "Coherence Classification": [],
  "Fact Verification": [
    "claim evidence"
  ],
  "Word Semantics": [
    "context verb",
    "concept word generate",
    "word generate",
    "word example"
  ],
  "Poem Generation": [
    "poem output",
    "poem be"
  ],
  "Number Conversion": [
    "number prefix"
  ],
  "Overlap Extraction": [],
  "Word Analogy": [],
  "Answerability Classification": [
    "answer consistent context",
    "question answerable based",
    "Classify question answerable",
    "question answerable output",
    "answerable output",
    "answerable output be"
  ],
  "Paraphrasing": [
    "paraphrasing",
    "paraphrasing task",
    "sentence paraphrased",
    "write paraphrase",
    "paraphrase new words"
  ],
  "Fill in The Blank": [],
  "Data to Text": [],
  "Gender Classification": [],
  "Summarization": [
    "summarization",
    "summarize",
    "summaries",
    "summaries i"
  ],
  "Entity Relation Classification": [],
  "Keyword Tagging": [],
  "Mathematics": [],
  "Irony Detection": [
    "form irony classify",
    "irony classify",
    "irony situation",
    "irony irony",
    "irony irony achieved",
    "irony achieved",
    "irony task"
  ],
  "Spelling Error Detection": [],
  "Punctuation Error Detection": [
    "proper punctuation",
    "proper punctuation proper",
    "punctuation proper capitalization",
    "punctuations",
    "True punctuation"
  ],
  "Preposition Prediction": [
    "correct preposition",
    "correct preposition words",
    "preposition",
    "preposition words",
    "words preposition",
    "preposition words meaning",
    "Possible prepositions",
    "prepositions"
  ],
  "Entity Generation": [
    "entity input",
    "input entity entities",
    "entity entities"
  ],
  "Question Decomposition": [
    "question answer additional",
    "term question several",
    "question several",
    "question i.e",
    "step question be",
    "question be",
    "question think",
    "question search",
    "question create",
    "question create decomposition",
    "question ambiguous",
    "question ambiguous subjective",
    "answer question be",
    "questions ensure",
    "question same",
    "question answer impact",
    "question basic",
    "question decomposition",
    "question decomposition numbered",
    "question Imagine",
    "explaining question friendly",
    "question friendly"
  ],
  "Spam Classification": [],
  "Stance Detection": [
    "stance argument",
    "types stances favor",
    "stances favor",
    "stance towards",
    "stance favor"
  ],
  "Discourse Relation Classification": [
    "classify discourse types",
    "discourse types",
    "discourse types discourse",
    "types discourse type",
    "discourse type",
    "discourse type indicator",
    "context discourse types",
    "discourse types total"
  ],
  "Dialogue State Tracking": [
    "dialogues negotiations seller"
  ],
  "Speaker Relation Classification": [],
  "Discourse Connective Identification": []
}